chezmoi:template:missing-key=zero
#!/usr/bin/env bash

if ! command -v asdf &>/dev/null
then
  . ~/.asdf/asdf.sh
fi

{{- range $plugin, $spec := .tools }}
{{-   $spec = default (dict) $spec }}
{{-   if eq "asdf" (default "asdf" $spec.package_manager) }}
{{-     if or (not $spec.group) (index $ $spec.group) }}
{{-       $versions := default "latest" $spec.version }}
{{-       $versions = kindIs "slice" $versions | ternary $versions (list $versions) }}
{{-       $has_all_deps := true }}
{{-       range default (list) (index $spec "dependencies") }}
{{-         $has_all_deps = and $has_all_deps (lookPath . ) }}
{{-       end }}
{{-       if $has_all_deps }}
if {{ default "true" $spec.dependency_check }} ; then
  asdf plugin add {{ $plugin }} {{ default "" $spec.repo }}
{{-         range $version := $versions }}
  asdf install {{ $plugin }} {{ $version }}
{{-         end }}
  asdf global {{ $plugin }} {{ index $versions 0 }}
else
  echo "Dependency check for {{ $plugin }} failed." >&2
fi
{{-       else }}
echo "Skipping {{ $plugin }} due to missing dependencies." >&2
echo "{{ $plugin }} dependencies: {{ .dependencies | join ", " }}" >&2
{{-       end }}
asdf plugin remove {{ $plugin }}
{{-     end }}
{{-   end }}
{{- end }}

{{- if eq .chezmoi.os "windows" }}
echo TODO
{{- else }}

LVIM_CONFIG="$HOME/.config/lvim"
LVIM_CONFIG_BACKUP="$LVIM_CONFIG.bkp"
if [ -d "$LVIM_CONFIG" ]
then
  echo "Backing up $LVIM_CONFIG --> $LVIM_CONFIG_BACKUP"
  cp -a "$LVIM_CONFIG" "$LVIM_CONFIG_BACKUP"
fi

INSTALL_PREFIX="$HOME/.local/opt" LV_BRANCH={{ .tools.lunarvim.version }} ~/.local/opt/sbin/install-lunarvim.sh -y --install-dependencies

if [ -d "$LVIM_CONFIG_BACKUP" ]
then
  echo "Restoring $LVIM_CONFIG_BACKUP --> $LVIM_CONFIG"
  rm -rf "$LVIM_CONFIG"
  mv "$LVIM_CONFIG_BACKUP" "$LVIM_CONFIG"
fi

{{- end }}

{{- if .devtools }}
{{-   range (kindIs "slice" .tools.dotnet.version | ternary .tools.dotnet.version (list .tools.dotnet.version)) }}
~/.local/opt/sbin/dotnet-install.sh --channel {{ . }}
{{-   end}}
{{- end}}
