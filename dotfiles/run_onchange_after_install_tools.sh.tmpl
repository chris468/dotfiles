#!/usr/bin/env bash

if ! command -v asdf &>/dev/null
then
  . ~/.asdf/asdf.sh
fi

{{- range $plugin, $spec := .tools }}
{{-   $spec = default (dict) $spec }}
{{-   if and (eq "asdf" (default "asdf" (index $spec "package_manager"))) (or (not (index $spec "group")) (index $ $spec.group)) }}
{{-     $versions := default "latest" (index $spec "versions") }}
{{-     $versions = kindIs "slice" $versions | ternary $versions (list $versions) }}
asdf plugin add {{ $plugin }} {{ default "" (index $spec "repo") }}
{{-     range $version := $versions }}
asdf install {{ $plugin }} {{ $version }}
{{-     end }}
asdf global {{ $plugin }} {{ index $versions 0 }}
{{-   else}}
asdf plugin remove {{ $plugin }}
{{-   end }}
{{ end }}

{{- if eq .chezmoi.os "windows" }}
echo TODO
{{- else }}

LVIM_CONFIG="$HOME/.config/lvim"
LVIM_CONFIG_BACKUP="$LVIM_CONFIG.bkp"
if [ -d "$LVIM_CONFIG" ]
then
  echo "Backing up $LVIM_CONFIG --> $LVIM_CONFIG_BACKUP"
  cp -a "$LVIM_CONFIG" "$LVIM_CONFIG_BACKUP"
fi

INSTALL_PREFIX="$HOME/.local/opt" LV_BRANCH={{ .tools.lunarvim.versions }} ~/.local/opt/sbin/install-lunarvim.sh -y --install-dependencies

if [ -d "$LVIM_CONFIG_BACKUP" ]
then
  echo "Restoring $LVIM_CONFIG_BACKUP --> $LVIM_CONFIG"
  rm -rf "$LVIM_CONFIG"
  mv "$LVIM_CONFIG_BACKUP" "$LVIM_CONFIG"
fi

{{- end }}

{{- if .devtools }}
{{-   range (kindIs "slice" .tools.dotnet.versions | ternary .tools.dotnet.versions (list .tools.dotnet.versions)) }}
~/.local/opt/sbin/dotnet-install.sh --channel {{ . }}
{{-   end}}
{{- end}}
