chezmoi:template:missing-key=zero
#!/usr/bin/env bash

function __prepend_environment {
  name="$1" ; shift
  export="$1" ; shift

  while [ $# -ne 0 ]
  do
    val="$1" ; shift

    case "$(eval "echo \$$name")" in
      *$val:*) true ;;
      *) eval "$export$name=\"$val:\$$name\"" ;;
    esac
  done
}

{{- range $i, $e := .environment }}
{{-   $value := .value }}
{{-   if .value | kindIs "slice" }}
{{-     if .path }}
{{-       $value = list }}
{{-       range .value }}
{{-          $value = append $value (. | quote) }}
{{-       end }}
{{-     else }}
{{-       $value = .value | quote }}
{{      end }}
{{-   else if .path }}
{{-     $value = .value | quote }}
{{-   else }}
{{      $value = .value | quote }}
{{-   end }}
{{-   $valueList := eq $value nil | ternary nil ($value | kindIs "slice" | ternary $value (list $value)) }}
{{-   $export := eq .export nil | ternary true .export | ternary "export " "" }}

{{-   if not .name }}
{{-     fail (list "environment[" $i "] is missing required key `name`." | join "") }}
{{-   end }}

{{-   if eq "set" (.action | default "set") }}
{{ $export }}{{ .name }}={{ $value }}
{{-   else if eq "unset" .action }}
unset {{ .name }}
{{-   else if eq "prepend" .action }}
__prepend_environment {{ $e.name }} "{{ $export }}" {{ range $valueList | reverse }} {{ . }}{{ end }}
{{-   end }}
{{ end }}
