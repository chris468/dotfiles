data:
{{- $_local := ".local" -}}
{{- $_localInstall := joinPath $_local "opt" -}}
{{- $_localInstallBin := joinPath $_local "bin" -}}
{{- $_localInstallSbin := joinPath $_local "sbin" -}}
{{- $_dataHome := joinPath $_local "share" -}}
{{- $_configHome := ".config" -}}
{{- $_cacheHome := ".cache" -}}
{{- $_ipython := joinPath $_configHome "ipython" -}}
{{- $_zshConfig := joinPath $_configHome "zsh" -}}
{{- $_zshPlugins := joinPath $_zshConfig "plugins" -}}
{{- $_fzf := joinPath $_localInstall "fzf" -}}
{{- $_fzfBin := joinPath $_fzf "bin" -}}
{{- $_relativePaths := dict
      "local" $_local
      "localInstall" $_localInstall
      "localInstallBin" $_localInstallBin
      "localInstallSbin" $_localInstallSbin
      "asdf" ".asdf"
      "dataHome" $_dataHome
      "configHome" $_configHome
      "fzf" $_fzf
      "fzfBin" $_fzfBin
      "homebrew" "/opt/homebrew"
      "cacheHome" $_cacheHome
      "ipython" $_ipython
      "gitCredentialManager" (joinPath $_localInstall "git-credential-manager")
      "zshConfig" $_zshConfig
      "zshPlugins" $_zshPlugins
-}}
{{- if eq "windows" .chezmoi.os -}}
{{-   $_relativePaths = set $_relativePaths "bash" (joinPath "C:\\" "Program Files" "git" "bin" "bash.exe") -}}
{{- end -}}
{{- $paths := dict -}}
{{- range $k, $v := $_relativePaths -}}
{{-   $paths = set $paths $k ($v | osIsAbs | ternary $v (joinPath $.chezmoi.homeDir $v)) -}}
{{- end -}}
{{- $paths = set $paths "relative" $_relativePaths -}}

{{- $_defaults := includeTemplate "dotfiles/.chezmoitemplates/configDefaults" (dict "chezmoi" .chezmoi "paths" $paths) | fromYaml }}

{{- $_profile := "profile" | index . | default dict -}}
{{- $work := promptBoolOnce $_profile "work" "Work" false }}
    profile:
        work: {{ $work }}
        swapkeys: {{ "swapkeys" | index $_profile | default false }}

{{ $config := "config" | index . | default dict -}}
{{ dict "config" $config | toYaml | indent 4 }}

# ==============================================================================
# ==== Everything past this point is generated, changed will be overwritten ====
# ==============================================================================

{{ $realConfig := $_defaults | merge $config -}}
{{ dict "realConfig" $realConfig | toYaml | indent 4 }}

    paths:
{{ $paths | toYaml | indent 8 }}
        unix:
{{ includeTemplate "dotfiles/.chezmoitemplates/buildUnixPaths" (dict "chezmoi" .chezmoi "paths" $paths) | indent 12 }}
    environment:
        - name: AWS_PROFILE
          action: unset
        - name: KUBECONFIG
          action: unset
        - name: GPG_TTY
          action: command
          value: tty
        - name: IPYTHONDIR
          path: true
          value: {{ $paths.ipython }}
        - name: LOCAL_INSTALL_DIR
          path: true
          value: {{ $paths.localInstall }}
          export: false
        - name: POSH_THEME
          path: true
          value: {{ $realConfig.poshTheme }}
        - name: XDG_DATA_HOME
          path: true
          persist: true
          value: {{ $paths.dataHome }}
        - name: XDG_CONFIG_HOME
          path: true
          persist: true
          value: {{ $paths.configHome }}
        - name: XDG_CACHE_HOME
          path: true
          persist: true
          value: {{ $paths.cacheHome }}
{{- if $work }}
        - name: CHRIS468_LAZYVIM_PROFILE
          persist: true
          value: work
{{- end }}
{{- if $realConfig.packageManager.asdf.install }}
        - name: ASDF_DIR
          value: {{ $paths.asdf }}
        - name: ASDF_DATA_DIR
          value: {{ $paths.asdf }}
{{- end }}
        - name: PATH
          path: true
          action: prepend
          persist: true
          value:
              - {{ $paths.localInstallBin }}
              - {{ $paths.fzfBin }}
{{- if "homebrew" | index $paths }}
              - {{ "bin" | joinPath $paths.homebrew }}
{{- end }}
    defaults:
{{ $_defaults | toYaml | indent 8 }}

umask: 0o022

{{- if eq .chezmoi.os "windows" }}
interpreters:
    sh:
        command: {{ $paths.bash }}
    ps1:
        command: pwsh
        args:
            - "-NoLogo"

    cd:
        command: pwsh
{{- end  }}
# vim: set ft=none syntax=yaml ts=4 sw=4 et :
