# inspired by the nord lualine theme
# https://github.com/nvim-lualine/lualine.nvim/blob/master/lua/lualine/themes/nord.lua
# yaml-language-server: $schema=https://raw.githubusercontent.com/JanDeDobbeleer/oh-my-posh/main/themes/schema.json
version: 2
palettes:
  template: catppuccin-mocha
  list:
    nord:
      nord0: "#2e3440"
      nord1: "#3b4252"
      nord2: "#434c5e"
      nord3: "#4c566a"
      nord4: "#d8dee9"
      nord5: "#e5e9f0"
      nord6: "#eceff4"
      nord7: "#8fbcbb"
      nord8: "#88c0d0"
      nord9: "#81a1c1"
      nord10: "#5e81ac"
      nord11: "#bf616a"
      nord12: "#d08770"
      nord13: "#ebcb8b"
      nord14: "#a3be8c"
      nord15: "#b48ead"
      outer-foreground: p:nord1
      outer-background: p:nord8
      middle-foreground: p:nord5
      middle-background: p:nord1
      inner-foreground: p:nord5
      inner-background: p:nord3
      prompt-foreground: p:nord8
      aws-foreground: p:nord13
      kubectl-foreground: p:nord10
      fail: p:nord11
      dim-foreground: p:nord3
      added: p:nord14
      modified: p:nord15
      deleted: p:nord12
      untracked: p:nord10
      unmerged: p:nord11
      unstaged: p:nord13
      staged: p:nord14
      clean: p:nord14
      dirty: p:nord13
      diverged: p:nord11
      ahead: p:nord10

    catppuccin-mocha:
      rosewater: "#f5e0dc"
      flamingo: "#f2cdcd"
      pink: "#f5c2e7"
      mauve: "#cba6f7"
      red: "#f38ba8"
      maroon: "#eba0ac"
      peach: "#fab387"
      yellow: "#f9e2af"
      green: "#a6e3a1"
      teal: "#94e2d5"
      sky: "#89dceb"
      sapphire: "#74c7ec"
      blue: "#89b4fa"
      lavender: "#b4befe"
      text: "#cdd6f4"
      subtext1: "#bac2de"
      subtext0: "#a6adc8"
      overlay2: "#9399b2"
      overlay1: "#7f849c"
      overlay0: "#6c7086"
      surface2: "#585b70"
      surface1: "#45475a"
      surface0: "#313244"
      base: "#1e1e2e"
      mantle: "#181825"
      crust: "#11111b"

      outer-foreground: p:crust
      outer-background: p:blue
      middle-foreground: p:blue
      middle-background: p:surface0
      inner-foreground: p:blue
      inner-background: p:crust
      prompt-foreground: p:blue
      aws-foreground: p:peach
      kubectl-foreground: p:blue
      fail: p:red
      dim-foreground: p:crust
      added: p:green
      modified: p:yellow
      deleted: p:red
      untracked: p:blue
      unmerged: p:orange
      unstaged: p:yellow
      staged: p:green
      clean: p:green
      dirty: p:yellow
      diverged: p:red
      ahead: p:red

var:
  min_width: 90
  mapped_shells:
    - bash
    - pwsh
    - nu
    - zsh
    - xonsh

secondary_prompt:
  template: '‚Ä¶‚Ä¶{{ "‚Ä¶" | regexReplaceAll "." (.Var.mapped_shells | has .Shell | ternary "." .Shell)  }} '
  foreground: p:dim-foreground
  background: transparent

blocks:
  - type: prompt
    alignment: left
    newline: true
    segments:
      - type: status
        style: plain
        template: ‚îè
        foreground: p:prompt-foreground
        foreground_templates:
          - "{{ if ne .Code 0 }}p:fail{{ end }}"
        properties:
          always_enabled: true
      - type: os
        style: diamond
        leading_diamond: ÓÇ≤
        foreground: p:outer-foreground
        background: parentForeground
        templates_logic: first_match
        templates:
          - '{{ if eq "1" .Env.POSH_WIDE }} {{ if .WSL }}Óò™ {{ end }}{{ .Icon }} {{ end }}'
          - "{{ if .WSL }}Óò™{{ end }}{{ .Icon }}"
      - type: session
        style: diamond
        leading_diamond: <parentBackground,background>ÓÇ∞</>
        foreground: p:middle-foreground
        background: p:middle-background
        template: ' {{
          $userName := .UserName }}{{
          $hostName := regexReplaceAll "\\..*" .HostName "" }}{{
          if ne "1" .Env.POSH_WIDE }}{{
          $userName = regexReplaceAll "(.{4,}?)(.{2,})" $userName "${1}‚Ä¶" }}{{
          $hostName = regexReplaceAll "(.{4,}?)(.{2,})" $hostName "${1}‚Ä¶" }}{{
          end }}{{
          if .SSHSession }}ÓÆ© {{ end }}{{ $userName }}@{{ regexReplaceAll "\\..*" $hostName "" }} '
      - type: path
        style: diamond
        leading_diamond: <parentBackground,background>ÓÇ∞</>
        foreground: p:inner-foreground
        background: p:inner-background
        template: ' {{ $path := .Path }}{{
          if ne "1" .Env.POSH_WIDE }}{{
          $segments := regexFindAll "[^\\\\/]+" $path -1 }}{{
          $first := $segments | first }}{{ $last := $segments | last }}{{
          if gt ($first | len) 5 }}{{ $segments = list ($first | trunc 5) "‚Ä¶" | join "" | prepend ($segments | rest) }}{{ end }}{{
          if gt ($last | len) 5 }}{{ $segments = list ($last | trunc 5) "‚Ä¶" | join "" | append ($segments | initial) }}{{ end }}{{
          $path = $segments | join "/" }}{{
          end }}{{
          if not .Writable }}Ó©µ {{ end }}{{ $path }} '
        properties:
          style: agnoster_short
          max_depth: 1
          home_icon: "ÔÄï"
          folder_icon: "Ó™É"
          mapped_locations_enabled: true
          mapped_locations:
            "~/src": Û∞Ö¥
            "c:/dev": Û∞Ö¥
            "d:/dev": Û∞Ö¥
            "~/.config": Óòï
            "~/.local/share/chezmoi": Óòó
      - type: git
        style: diamond
        leading_diamond: <p:inner-foreground,p:inner-background>ÓÇ±</>
        foreground_templates:
          - "{{ if or .Working.Changed .Staging.Changed }}p:dirty{{ end }}"
          - "{{ if and .Behind .Ahead }}p:diverged{{ end }}"
          - "{{ if .Ahead }}p:ahead{{ end }}"
          - p:clean
        background: parentBackground
        properties:
          fetch_status: true
          fetch_stash_count: true
          fetch_upstream_icon: true
          status_formats:
            Added: <p:added>Ôëó%d</>
            Modified: <p:modified>Ôëô%d</>
            Deleted: <p:deleted>Ôëò%d</>
            Untracked: <p:untracked>‚ç∞%d</>
            Unmerged: <p:unmerged> ùòπ%d</>
        template: ' {{
          $branch := .Ref }}{{
          $isUser := $branch | hasPrefix "users/" }}{{
          $userRegEx := list "^users/((" .UserName "/)?)" | join "" }}{{
          $branch := regexReplaceAll $userRegEx $branch "" }}{{
          $segments := regexFindAll "[^\\\\/]+" $branch -1 }}{{
          $first := $segments | first }}{{ $last := $segments | last }}{{
          if gt ($first | len) 6 }}{{ $segments = list ($first | trunc 6) "‚Ä¶" | join "" | prepend ($segments | rest) }}{{ end }}{{
          if gt ($last | len) 6 }}{{ $segments = list ($last | trunc 6) "‚Ä¶" | join "" | append ($segments | initial) }}{{ end }}{{
          if gt ($segments | len) 2 }}{{ $segments = list ($segments | first) "Ó™É" ( $segments | last) }}{{ end }}{{
          $branch = $segments | join "/" }}{{
          .UpstreamIcon }}{{ if eq "1" .Env.POSH_WIDE }}{{ $isUser | ternary "ÔÄá/" "" }}{{ $branch }}{{if .BranchStatus }} {{ .BranchStatus }}{{ end }} {{ if .Working.Changed }}<p:unstaged>ÔÅÑ</>{{ .Working.String }}{{ end }}{{ if and (.Staging.Changed) (.Working.Changed) }} {{ end }}{{ if .Staging.Changed }}<p:staged>ÔÅÜ</>{{ .Staging.String }}{{ end }} {{ end }}'
  - type: prompt
    alignment: right
    filler: "<p:inner-foreground,p:inner-background> </>"
    segments:
      - type: text
        style: diamond
        trailing_diamond: <p:inner-foreground,p:inner-background>ÓÇ≥</>
        foreground: p:inner-foreground
        background: p:inner-background
        template: " {{ if .Env.CHEZMOI }}Óòó{{ end }} "
      - type: python
        style: diamond
        trailing_diamond: <p:inner-foreground,p:inner-background>ÓÇ≥</>
        foreground: p:inner-foreground
        background: p:inner-background
        template: '{{ if and .Venv .Full }} Óàµ {{ if eq "1" .Env.POSH_WIDE }}{{ .Full }} {{ end }}{{ end }}'
      - type: kubectl
        style: diamond
        trailing_diamond: <p:inner-foreground,p:inner-background>ÓÇ≥</>
        foreground: p:kubectl-foreground
        background: p:inner-background
        template: ' {{ if .Context }}Û±Éæ {{ if eq "1" .Env.POSH_WIDE }}{{ .Context }}{{ if .Namespace }}:{{ .Namespace }}{{ end }} {{ end }}{{ end }}'
      - type: aws
        style: diamond
        trailing_diamond: <p:inner-foreground,p:inner-background>ÓÇ≥</>
        foreground: p:aws-foreground
        background: p:inner-background
        template: ' {{ if or (ne "default" (.Profile | default "default")) (ne "us-east-1" (.Region | default "us-east-1")) }}Û∞∏è{{ if eq "1" .Env.POSH_WIDE }} {{ .Profile }}{{ if and .Region (ne .Region "us-east-1") }}@{{ .Region }}{{ end }}{{ end }} {{ end }}'
      - type: time
        style: plain
        foreground: p:inner-foreground
        background: p:inner-background
        templates_logic: first_match
        templates:
          - ' {{ if ne "1" .Env.POSH_WIDE }}{{ .CurrentDate | date "15:04" }} {{ end }}'
          - ' {{ .CurrentDate | date "3:04:05 pm MST" }} '
      - type: executiontime
        style: diamond
        leading_diamond: <background,parentBackground>ÓÇ≤</>
        foreground: p:middle-foreground
        background: p:middle-background
        template: '{{ if eq "1" .Env.POSH_WIDE }} Ôâì{{ end }} {{ .FormattedMs }} '
        properties:
          style: round
          threshold: 0
      - type: status
        style: diamond
        leading_diamond: <background,parentBackground>ÓÇ≤</>
        trailing_diamond: "ÓÇ∞"
        properties:
          always_enabled: true
        foreground: p:outer-foreground
        background: p:outer-background
        background_templates:
          - "{{ if ne 0 .Code }}p:fail{{ end }}"
        templates_logic: first_match
        templates:
          - '{{ if ne "1" .Env.POSH_WIDE }}{{ if ne 0 .Code }}Ó©¨{{ .Code }}{{ else }}Ó™≤{{ end }}{{ end }}'
          - " {{ if ne 0 .Code }}Ó©¨ {{ .Code }}{{ if ne (.Code | reason) (.Code | toString) }} ({{ .Code | reason | lower }}){{ end }}{{ else }}Ó™≤{{ end }} "
  - type: prompt
    alignment: left
    newline: true
    segments:
      - type: status
        style: plain
        template: ‚îó{{ if eq "1" .Env.POSH_WIDE }}‚îÅ{{ end }}
        foreground: p:prompt-foreground
        foreground_templates:
          - "{{ if ne .Code 0 }}p:fail{{ end }}"
        properties:
          always_enabled: true
      - type: shell
        style: plain
        foreground: parentForeground
        properties:
          mapped_shell_names:
            bash: "$"
            pwsh: "ÓöÉ"
            nu: "ŒΩ"
            zsh: "%"
            xonsh: "Óúº"
